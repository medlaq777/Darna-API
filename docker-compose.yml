

services:
  # Your Express/TypeScript API
  api:
    build:
      context: .      
      dockerfile: Dockerfile
    container_name: my-project-api
    ports:
      - "${PORT:-3000}:3000"     # host port comes from $API_PORT (defaults to 4000)
    volumes:
      # This is the key to development mode:
      # It mounts your local 'api' folder into the container at '/app'
      # Changes on your host machine are instantly reflected in the container
      - .:/app
      # This anonymous volume prevents your host's 'node_modules'
      # from overwriting the container's 'node_modules'
      - /app/node_modules
    env_file:
      - ./.env          # Loads environment variables from the .env file
    # This command uses 'nodemon' (via 'npm run dev') to auto-restart
    # your server inside the container when you save a .ts file
    command: npm run dev
    depends_on:
      minio:
        condition: service_healthy # Waits for MinIO to be healthy before starting
    networks:
      - app-network

  # MinIO Server
  minio:
    image: minio/minio
    container_name: minio-server
    ports:
      - "9000:9000"     # MinIO API port
      - "9001:9001"     # MinIO Console (Web UI) port
    volumes:
      - minio-data:/data # Persists uploaded data using a named volume
    env_file:
      - ./.env
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - app-network

# Define the network for services to communicate
networks:
  app-network:
    driver: bridge

# Define the named volume for MinIO data persistence
volumes:
  minio-data: